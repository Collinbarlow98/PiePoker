{"ast":null,"code":"import _objectSpread from \"/Users/Collin/Documents/my-app/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport axios from 'axios';\nimport * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  user: {\n    isAuthenticated: 'false'\n  },\n  poke_count: 0,\n  items: {\n    poker: {\n      units: 0,\n      can_buy: false,\n      cost: 10,\n      details: {\n        tier: 1,\n        poke_inc: 1,\n        can_upgrade: false,\n        upgrade_cost: 100\n      }\n    },\n    baker: {\n      units: 0,\n      can_buy: false,\n      cost: 25,\n      details: {\n        tier: 1,\n        poke_inc: 10,\n        can_upgrade: false,\n        upgrade_cost: 1000\n      }\n    },\n    cafe: {\n      units: 0,\n      can_buy: false,\n      cost: 50,\n      details: {\n        tier: 1,\n        poke_inc: 25,\n        can_upgrade: false,\n        upgrade_cost: 5000\n      }\n    },\n    factory: {\n      units: 0,\n      can_buy: false,\n      cost: 100,\n      details: {\n        tier: 1,\n        poke_inc: 50,\n        can_upgrade: false,\n        upgrade_cost: 10000\n      }\n    }\n  }\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_NEW_USER:\n      axios.post('http://localhost:5000/addUser', action.newUser, {}).then(res => {\n        console.log(res);\n      });\n      return {};\n\n    case actionTypes.LOG_USER_IN:\n      return _objectSpread({}, state, {\n        user: {\n          isAuthenticated: 'true',\n          email: action.response.email,\n          name: action.response.name\n        }\n      });\n\n    case actionTypes.PLAY_AS_GUEST:\n      return {};\n  }\n\n  return state;\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/Collin/Documents/my-app/client/src/store/reducers/userReducer.js"],"names":["axios","actionTypes","initialState","user","isAuthenticated","poke_count","items","poker","units","can_buy","cost","details","tier","poke_inc","can_upgrade","upgrade_cost","baker","cafe","factory","userReducer","state","action","type","ADD_NEW_USER","post","newUser","then","res","console","log","LOG_USER_IN","email","response","name","PLAY_AS_GUEST"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE;AADb,GADa;AAInBC,EAAAA,UAAU,EAAE,CAJO;AAKnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,CADF;AAELC,MAAAA,OAAO,EAAE,KAFJ;AAGLC,MAAAA,IAAI,EAAE,EAHD;AAILC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,CADC;AAEPC,QAAAA,QAAQ,EAAE,CAFH;AAGPC,QAAAA,WAAW,EAAE,KAHN;AAIPC,QAAAA,YAAY,EAAE;AAJP;AAJJ,KADF;AAYLC,IAAAA,KAAK,EAAE;AACLR,MAAAA,KAAK,EAAE,CADF;AAELC,MAAAA,OAAO,EAAE,KAFJ;AAGLC,MAAAA,IAAI,EAAE,EAHD;AAILC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,CADC;AAEPC,QAAAA,QAAQ,EAAE,EAFH;AAGPC,QAAAA,WAAW,EAAE,KAHN;AAIPC,QAAAA,YAAY,EAAE;AAJP;AAJJ,KAZF;AAuBLE,IAAAA,IAAI,EAAE;AACJT,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,OAAO,EAAE,KAFL;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,CADC;AAEPC,QAAAA,QAAQ,EAAE,EAFH;AAGPC,QAAAA,WAAW,EAAE,KAHN;AAIPC,QAAAA,YAAY,EAAE;AAJP;AAJL,KAvBD;AAkCLG,IAAAA,OAAO,EAAE;AACPV,MAAAA,KAAK,EAAE,CADA;AAEPC,MAAAA,OAAO,EAAE,KAFF;AAGPC,MAAAA,IAAI,EAAE,GAHC;AAIPC,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAE,CADC;AAEPC,QAAAA,QAAQ,EAAE,EAFH;AAGPC,QAAAA,WAAW,EAAE,KAHN;AAIPC,QAAAA,YAAY,EAAE;AAJP;AAJF;AAlCJ;AALY,CAArB;;AAqDA,MAAMI,WAAW,GAAG,CAACC,KAAK,GAAGlB,YAAT,EAAuBmB,MAAvB,KAAkC;AAEpD,UAAQA,MAAM,CAACC,IAAf;AAEE,SAAKrB,WAAW,CAACsB,YAAjB;AAEEvB,MAAAA,KAAK,CAACwB,IAAN,CAAW,+BAAX,EAA4CH,MAAM,CAACI,OAAnD,EAA2D,EAA3D,EAGCC,IAHD,CAGMC,GAAG,IAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OALD;AAOA,aAAO,EAAP;;AAIF,SAAK1B,WAAW,CAAC6B,WAAjB;AAEE,+BACKV,KADL;AAEEjB,QAAAA,IAAI,EAAE;AACJC,UAAAA,eAAe,EAAE,MADb;AAEJ2B,UAAAA,KAAK,EAAEV,MAAM,CAACW,QAAP,CAAgBD,KAFnB;AAGJE,UAAAA,IAAI,EAAEZ,MAAM,CAACW,QAAP,CAAgBC;AAHlB;AAFR;;AASF,SAAKhC,WAAW,CAACiC,aAAjB;AACE,aAAO,EAAP;AA3BJ;;AAiCA,SAAOd,KAAP;AACD,CApCD;;AAsCA,eAAeD,WAAf","sourcesContent":["import axios from 'axios'\nimport * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n  user: {\n    isAuthenticated: 'false'\n  },\n  poke_count: 0,\n  items: {\n    poker: {\n      units: 0,\n      can_buy: false,\n      cost: 10,\n      details: {\n        tier: 1,\n        poke_inc: 1,\n        can_upgrade: false,\n        upgrade_cost: 100\n      }\n    },\n    baker: {\n      units: 0,\n      can_buy: false,\n      cost: 25,\n      details: {\n        tier: 1,\n        poke_inc: 10,\n        can_upgrade: false,\n        upgrade_cost: 1000\n      }\n    },\n    cafe: {\n      units: 0,\n      can_buy: false,\n      cost: 50,\n      details: {\n        tier: 1,\n        poke_inc: 25,\n        can_upgrade: false,\n        upgrade_cost: 5000\n      }\n    },\n    factory: {\n      units: 0,\n      can_buy: false,\n      cost: 100,\n      details: {\n        tier: 1,\n        poke_inc: 50,\n        can_upgrade: false,\n        upgrade_cost: 10000\n      }\n    }\n  }\n}\n\nconst userReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n\n    case actionTypes.ADD_NEW_USER:\n\n      axios.post('http://localhost:5000/addUser', action.newUser,{\n\n      })\n      .then(res => {\n        console.log(res)\n      })\n\n      return {\n\n      }\n\n    case actionTypes.LOG_USER_IN:\n\n      return {\n        ...state,\n        user: {\n          isAuthenticated: 'true',\n          email: action.response.email,\n          name: action.response.name\n        }\n      }\n\n    case actionTypes.PLAY_AS_GUEST:\n      return {\n\n      }\n\n  }\n\n  return state\n}\n\nexport default userReducer\n"]},"metadata":{},"sourceType":"module"}